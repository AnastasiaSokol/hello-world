#include "widget.h"//файл в директории проекта

//файл реализации
Widget::Widget(QWidget *parent)//реализация конструтора
    : QWidget(parent)
{
    setWindowTitle(tr("My brauser"));
    //----------------------------------------
    adresstr        = new QLineEdit();
    prevbutton1     = new QPushButton(tr("<<"));
    nextbutton2     = new QPushButton(tr(">>"));
    stopbutton3     = new QPushButton(tr("stop"));
    refreshbutton4  = new QPushButton(tr("refresh"));
    gobutton5       = new QPushButton(tr("go"));
    webView         = new QWebView();

    //компоновщик layout -расскладывает на формочке ГЭ
    //gridlayot - в виде таблицы
    QVBoxLayout *mainlay1       = new QVBoxLayout();//
    QHBoxLayout *toolbarlay2    = new QHBoxLayout();//Horisontal
    label1                      = new QLabel("");
    //----------------------------------------

    //Настройка прокси
    /* webView->page()->networkAccessManager()->setProxy(QNetworkProxy(QNetworkProxy::HttpProxy,
                                                                    "172.27.100.5",4444,"student.istu","student")
                                                   );*/
    webView->load(QUrl("http://txt.newsru.com"));
    webView->page()->setLinkDelegationPolicy(QWebPage::DelegateAllLinks);//передача по ссылкам
    //tr метод QObject , утилита lupdate - поиск всего что есть в пректе содержащего строки
    //qtligvist
    //----------------------------------------
    toolbarlay2->addWidget(prevbutton1);
    toolbarlay2->addWidget(nextbutton2);
    toolbarlay2->addWidget(stopbutton3);
    toolbarlay2->addWidget(refreshbutton4);
    toolbarlay2->addWidget(adresstr);
    toolbarlay2->addWidget(gobutton5);
    //-----------------------------------------
    mainlay1->addLayout(toolbarlay2);
    mainlay1->addWidget(webView);
    mainlay1->addWidget(label1);
    //-----------------------------------------
    setLayout(mainlay1);//устанавливает компоновщик
    //при нажатии на кнопку отобразим надпись
    //слот это обработчик
    //связать обработчик
    //сигнал связать с объектом
    //источник -кнопочка
    connect(gobutton5,SIGNAL(clicked(bool)),this,SLOT(goURL()));
    connect(adresstr, SIGNAL(returnPressed()),this,SLOT(goURL()));
    connect(webView, SIGNAL(linkClicked(QUrl)),this,SLOT(pageLinkClicked(QUrl)));
    connect(webView, SIGNAL(titleChanged(QString)),this,SLOT(pageTitleChanged(QString)));
    connect(webView, SIGNAL(urlChanged(QUrl)),this,SLOT(pageUrlChanged(QUrl)));
}

Widget::~Widget()//реализация деструктора
{
//закрытие устройст - ком портов например, удаление окна из памяти
    //деструктор необязательно может быть
    //потому что уборка мусора здесь автоматическая
}
//при клике на кнопку вызывать этот слот и получать URL
//проверять начинается ли адресс с http
void Widget::goURL(){
    QString addr = adresstr->text();
    if (!(addr.startsWith("http://")||addr.startsWith("https://"))){
        addr="http://"+addr;
    }
     qDebug() << addr;
       webView->load(QUrl(addr));
}
//-----------------------------------------------
void Widget:: pageLinkClicked(QUrl addr){
    webView->load(QUrl (addr));

}

//----------------------------------------------
void Widget::mySlot(){
    label1->setText(tr("hello world"));
}
//---------------------------------------------
void Widget::pageTitleChanged(QString title){

    QString titleOut = tr("My brauser");
    if(title.length()>0){
        titleOut +=" :: "+title;

    }
    setWindowTitle(titleOut);
}
//-----------------------------
void Widget::pageUrlChanged (QUrl url){

    adresstr->setText(url.toString());
}
